{smcl}
{txt}{sf}{ul off}{.-}
      name:  {res}plog_85
       {txt}log:  {res}/Users/macbookair/Desktop/OCP_NEER/Codes/deflators.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res} 9 Dec 2020, 09:41:34
{txt}
{com}. project, doinfo 
{txt}project master > Project Name: {res}master
{txt}project master > Project Dir.: {res}/Users/macbookair/Desktop/OCP_NEER
{txt}project master > Build start : {res}09dec2020, 09:41:32{txt}
project master > Do-file Name: {res}deflators.do
{txt}project master > Enclosing do-files:
project master >     {res}master.do
{txt}
{com}. local pdir "`r(pdir)'"
{txt}
{com}. local dofile "`(dofile)'"
{txt}
{com}. * Deflators 
.         * CPI 
.                 * Import CPI 
.                         //project original
.                         cd "`pdir'/data_raw/deflators"
{res}/Users/macbookair/Desktop/OCP_NEER/data_raw/deflators
{txt}
{com}.                         import excel using "cpi.xlsx", firstrow cellrange(A3) clear
{res}{txt}
{com}.                         drop B  
{txt}
{com}.                         foreach v of varlist _all {c -(}
{txt}  2{com}.                         local x : variable label `v'
{txt}  3{com}.                         rename `v' year`x'
{txt}  4{com}.                         {c )-}
{res}{txt}
{com}.                         rename year partner
{res}{txt}
{com}.                         reshape long year, i(partner) j(period, string)
{txt}(note: j = 1950M01 1950M02 1950M03 1950M04 1950M05 1950M06 1950M07 1950M08 1950M09 1950M10 1950M11 1950M12 1950Q1 1950Q2 1950Q3 1950Q4 1951M01 1951M02 1951M03 1951M04 1951M05 1951M06 1951M07 1951M08 1951M09 1951M10 1951M11 1951M12 1951Q1 1951Q2 1951Q3 1951Q4 1952M01 1952M02 1952M03 1952M04 1952M05 1952M06 1952M07 1952M08 1952M09 1952M10 1952M11 1952M12 1952Q1 1952Q2 1952Q3 1952Q4 1953M01 1953M02 1953M03 1953M04 1953M05 1953M06 1953M07 1953M08 1953M09 1953M10 1953M11 1953M12 1953Q1 1953Q2 1953Q3 1953Q4 1954M01 1954M02 1954M03 1954M04 1954M05 1954M06 1954M07 1954M08 1954M09 1954M10 1954M11 1954M12 1954Q1 1954Q2 1954Q3 1954Q4 1955M01 1955M02 1955M03 1955M04 1955M05 1955M06 1955M07 1955M08 1955M09 1955M10 1955M11 1955M12 1955Q1 1955Q2 1955Q3 1955Q4 1956M01 1956M02 1956M03 1956M04 1956M05 1956M06 1956M07 1956M08 1956M09 1956M10 1956M11 1956M12 1956Q1 1956Q2 1956Q3 1956Q4 1957M01 1957M02 1957M03 1957M04 1957M05 1957M06 1957M07 1957M08 1957M09 1957M10 1957M11 1957M12 1957Q1 1957Q2 1957Q3 1957Q4 1958M01 1958M02 1958M03 1958M04 1958M05 1958M06 1958M07 1958M08 1958M09 1958M10 1958M11 1958M12 1958Q1 1958Q2 1958Q3 1958Q4 1959M01 1959M02 1959M03 1959M04 1959M05 1959M06 1959M07 1959M08 1959M09 1959M10 1959M11 1959M12 1959Q1 1959Q2 1959Q3 1959Q4 1960M01 1960M02 1960M03 1960M04 1960M05 1960M06 1960M07 1960M08 1960M09 1960M10 1960M11 1960M12 1960Q1 1960Q2 1960Q3 1960Q4 1961M01 1961M02 1961M03 1961M04 1961M05 1961M06 1961M07 1961M08 1961M09 1961M10 1961M11 1961M12 1961Q1 1961Q2 1961Q3 1961Q4 1962M01 1962M02 1962M03 1962M04 1962M05 1962M06 1962M07 1962M08 1962M09 1962M10 1962M11 1962M12 1962Q1 1962Q2 1962Q3 1962Q4 1963M01 1963M02 1963M03 1963M04 1963M05 1963M06 1963M07 1963M08 1963M09 1963M10 1963M11 1963M12 1963Q1 1963Q2 1963Q3 1963Q4 1964M01 1964M02 1964M03 1964M04 1964M05 1964M06 1964M07 1964M08 1964M09 1964M10 1964M11 1964M12 1964Q1 1964Q2 1964Q3 1964Q4 1965M01 1965M02 1965M03 1965M04 1965M05 1965M06 1965M07 1965M08 1965M09 1965M10 1965M11 1965M12 1965Q1 1965Q2 1965Q3 1965Q4 1966M01 1966M02 1966M03 1966M04 1966M05 1966M06 1966M07 1966M08 1966M09 1966M10 1966M11 1966M12 1966Q1 1966Q2 1966Q3 1966Q4 1967M01 1967M02 1967M03 1967M04 1967M05 1967M06 1967M07 1967M08 1967M09 1967M10 1967M11 1967M12 1967Q1 1967Q2 1967Q3 1967Q4 1968M01 1968M02 1968M03 1968M04 1968M05 1968M06 1968M07 1968M08 1968M09 1968M10 1968M11 1968M12 1968Q1 1968Q2 1968Q3 1968Q4 1969M01 1969M02 1969M03 1969M04 1969M05 1969M06 1969M07 1969M08 1969M09 1969M10 1969M11 1969M12 1969Q1 1969Q2 1969Q3 1969Q4 1970M01 1970M02 1970M03 1970M04 1970M05 1970M06 1970M07 1970M08 1970M09 1970M10 1970M11 1970M12 1970Q1 1970Q2 1970Q3 1970Q4 1971M01 1971M02 1971M03 1971M04 1971M05 1971M06 1971M07 1971M08 1971M09 1971M10 1971M11 1971M12 1971Q1 1971Q2 1971Q3 1971Q4 1972M01 1972M02 1972M03 1972M04 1972M05 1972M06 1972M07 1972M08 1972M09 1972M10 1972M11 1972M12 1972Q1 1972Q2 1972Q3 1972Q4 1973M01 1973M02 1973M03 1973M04 1973M05 1973M06 1973M07 1973M08 1973M09 1973M10 1973M11 1973M12 1973Q1 1973Q2 1973Q3 1973Q4 1974M01 1974M02 1974M03 1974M04 1974M05 1974M06 1974M07 1974M08 1974M09 1974M10 1974M11 1974M12 1974Q1 1974Q2 1974Q3 1974Q4 1975M01 1975M02 1975M03 1975M04 1975M05 1975M06 1975M07 1975M08 1975M09 1975M10 1975M11 1975M12 1975Q1 1975Q2 1975Q3 1975Q4 1976M01 1976M02 1976M03 1976M04 1976M05 1976M06 1976M07 1976M08 1976M09 1976M10 1976M11 1976M12 1976Q1 1976Q2 1976Q3 1976Q4 1977M01 1977M02 1977M03 1977M04 1977M05 1977M06 1977M07 1977M08 1977M09 1977M10 1977M11 1977M12 1977Q1 1977Q2 1977Q3 1977Q4 1978M01 1978M02 1978M03 1978M04 1978M05 1978M06 1978M07 1978M08 1978M09 1978M10 1978M11 1978M12 1978Q1 1978Q2 1978Q3 1978Q4 1979M01 1979M02 1979M03 1979M04 1979M05 1979M06 1979M07 1979M08 1979M09 1979M10 1979M11 1979M12 1979Q1 1979Q2 1979Q3 1979Q4 1980M01 1980M02 1980M03 1980M04 1980M05 1980M06 1980M07 1980M08 1980M09 1980M10 1980M11 1980M12 1980Q1 1980Q2 1980Q3 1980Q4 1981M01 1981M02 1981M03 1981M04 1981M05 1981M06 1981M07 1981M08 1981M09 1981M10 1981M11 1981M12 1981Q1 1981Q2 1981Q3 1981Q4 1982M01 1982M02 1982M03 1982M04 1982M05 1982M06 1982M07 1982M08 1982M09 1982M10 1982M11 1982M12 1982Q1 1982Q2 1982Q3 1982Q4 1983M01 1983M02 1983M03 1983M04 1983M05 1983M06 1983M07 1983M08 1983M09 1983M10 1983M11 1983M12 1983Q1 1983Q2 1983Q3 1983Q4 1984M01 1984M02 1984M03 1984M04 1984M05 1984M06 1984M07 1984M08 1984M09 1984M10 1984M11 1984M12 1984Q1 1984Q2 1984Q3 1984Q4 1985M01 1985M02 1985M03 1985M04 1985M05 1985M06 1985M07 1985M08 1985M09 1985M10 1985M11 1985M12 1985Q1 1985Q2 1985Q3 1985Q4 1986M01 1986M02 1986M03 1986M04 1986M05 1986M06 1986M07 1986M08 1986M09 1986M10 1986M11 1986M12 1986Q1 1986Q2 1986Q3 1986Q4 1987M01 1987M02 1987M03 1987M04 1987M05 1987M06 1987M07 1987M08 1987M09 1987M10 1987M11 1987M12 1987Q1 1987Q2 1987Q3 1987Q4 1988M01 1988M02 1988M03 1988M04 1988M05 1988M06 1988M07 1988M08 1988M09 1988M10 1988M11 1988M12 1988Q1 1988Q2 1988Q3 1988Q4 1989M01 1989M02 1989M03 1989M04 1989M05 1989M06 1989M07 1989M08 1989M09 1989M10 1989M11 1989M12 1989Q1 1989Q2 1989Q3 1989Q4 1990M01 1990M02 1990M03 1990M04 1990M05 1990M06 1990M07 1990M08 1990M09 1990M10 1990M11 1990M12 1990Q1 1990Q2 1990Q3 1990Q4 1991M01 1991M02 1991M03 1991M04 1991M05 1991M06 1991M07 1991M08 1991M09 1991M10 1991M11 1991M12 1991Q1 1991Q2 1991Q3 1991Q4 1992M01 1992M02 1992M03 1992M04 1992M05 1992M06 1992M07 1992M08 1992M09 1992M10 1992M11 1992M12 1992Q1 1992Q2 1992Q3 1992Q4 1993M01 1993M02 1993M03 1993M04 1993M05 1993M06 1993M07 1993M08 1993M09 1993M10 1993M11 1993M12 1993Q1 1993Q2 1993Q3 1993Q4 1994M01 1994M02 1994M03 1994M04 1994M05 1994M06 1994M07 1994M08 1994M09 1994M10 1994M11 1994M12 1994Q1 1994Q2 1994Q3 1994Q4 1995M01 1995M02 1995M03 1995M04 1995M05 1995M06 1995M07 1995M08 1995M09 1995M10 1995M11 1995M12 1995Q1 1995Q2 1995Q3 1995Q4 1996M01 1996M02 1996M03 1996M04 1996M05 1996M06 1996M07 1996M08 1996M09 1996M10 1996M11 1996M12 1996Q1 1996Q2 1996Q3 1996Q4 1997M01 1997M02 1997M03 1997M04 1997M05 1997M06 1997M07 1997M08 1997M09 1997M10 1997M11 1997M12 1997Q1 1997Q2 1997Q3 1997Q4 1998M01 1998M02 1998M03 1998M04 1998M05 1998M06 1998M07 1998M08 1998M09 1998M10 1998M11 1998M12 1998Q1 1998Q2 1998Q3 1998Q4 1999M01 1999M02 1999M03 1999M04 1999M05 1999M06 1999M07 1999M08 1999M09 1999M10 1999M11 1999M12 1999Q1 1999Q2 1999Q3 1999Q4 2000M01 2000M02 2000M03 2000M04 2000M05 2000M06 2000M07 2000M08 2000M09 2000M10 2000M11 2000M12 2000Q1 2000Q2 2000Q3 2000Q4 2001M01 2001M02 2001M03 2001M04 2001M05 2001M06 2001M07 2001M08 2001M09 2001M10 2001M11 2001M12 2001Q1 2001Q2 2001Q3 2001Q4 2002M01 2002M02 2002M03 2002M04 2002M05 2002M06 2002M07 2002M08 2002M09 2002M10 2002M11 2002M12 2002Q1 2002Q2 2002Q3 2002Q4 2003M01 2003M02 2003M03 2003M04 2003M05 2003M06 2003M07 2003M08 2003M09 2003M10 2003M11 2003M12 2003Q1 2003Q2 2003Q3 2003Q4 2004M01 2004M02 2004M03 2004M04 2004M05 2004M06 2004M07 2004M08 2004M09 2004M10 2004M11 2004M12 2004Q1 2004Q2 2004Q3 2004Q4 2005M01 2005M02 2005M03 2005M04 2005M05 2005M06 2005M07 2005M08 2005M09 2005M10 2005M11 2005M12 2005Q1 2005Q2 2005Q3 2005Q4 2006M01 2006M02 2006M03 2006M04 2006M05 2006M06 2006M07 2006M08 2006M09 2006M10 2006M11 2006M12 2006Q1 2006Q2 2006Q3 2006Q4 2007M01 2007M02 2007M03 2007M04 2007M05 2007M06 2007M07 2007M08 2007M09 2007M10 2007M11 2007M12 2007Q1 2007Q2 2007Q3 2007Q4 2008M01 2008M02 2008M03 2008M04 2008M05 2008M06 2008M07 2008M08 2008M09 2008M10 2008M11 2008M12 2008Q1 2008Q2 2008Q3 2008Q4 2009M01 2009M02 2009M03 2009M04 2009M05 2009M06 2009M07 2009M08 2009M09 2009M10 2009M11 2009M12 2009Q1 2009Q2 2009Q3 2009Q4 2010M01 2010M02 2010M03 2010M04 2010M05 2010M06 2010M07 2010M08 2010M09 2010M10 2010M11 2010M12 2010Q1 2010Q2 2010Q3 2010Q4 2011M01 2011M02 2011M03 2011M04 2011M05 2011M06 2011M07 2011M08 2011M09 2011M10 2011M11 2011M12 2011Q1 2011Q2 2011Q3 2011Q4 2012M01 2012M02 2012M03 2012M04 2012M05 2012M06 2012M07 2012M08 2012M09 2012M10 2012M11 2012M12 2012Q1 2012Q2 2012Q3 2012Q4 2013M01 2013M02 2013M03 2013M04 2013M05 2013M06 2013M07 2013M08 2013M09 2013M10 2013M11 2013M12 2013Q1 2013Q2 2013Q3 2013Q4 2014M01 2014M02 2014M03 2014M04 2014M05 2014M06 2014M07 2014M08 2014M09 2014M10 2014M11 2014M12 2014Q1 2014Q2 2014Q3 2014Q4 2015M01 2015M02 2015M03 2015M04 2015M05 2015M06 2015M07 2015M08 2015M09 2015M10 2015M11 2015M12 2015Q1 2015Q2 2015Q3 2015Q4 2016M01 2016M02 2016M03 2016M04 2016M05 2016M06 2016M07 2016M08 2016M09 2016M10 2016M11 2016M12 2016Q1 2016Q2 2016Q3 2016Q4 2017M01 2017M02 2017M03 2017M04 2017M05 2017M06 2017M07 2017M08 2017M09 2017M10 2017M11 2017M12 2017Q1 2017Q2 2017Q3 2017Q4 2018M01 2018M02 2018M03 2018M04 2018M05 2018M06 2018M07 2018M08 2018M09 2018M10 2018M11 2018M12 2018Q1 2018Q2 2018Q3 2018Q4 2019M01 2019M02 2019M03 2019M04 2019M05 2019M06 2019M07 2019M08 2019M09 2019M10 2019M11 2019M12 2019Q1 2019Q2 2019Q3 2019Q4 2020M01 2020M02 2020M03 2020M04 2020M05 2020M06 2020M07 2020M08 2020M09 2020M10 2020Q1 2020Q2 2020Q3)

Data{col 36}wide{col 43}->{col 48}long
{hline 77}
Number of obs.                 {res}     238   {txt}->{res}  269654
{txt}Number of variables            {res}    1134   {txt}->{res}       3
{txt}j variable (1133 values)                  ->   {res}period
{txt}xij variables:
 {res}year1950M01 year1950M02 ... year2020Q3   {txt}->   {res}year
{txt}{hline 77}

{com}.                         rename year cpi 
{res}{txt}
{com}.                         * Extract dates
.                         gen year = regexs(0) if regexm(period, "^([0-9][0-9][0-9][0-9])")
{txt}
{com}.                         gen Month = regexr(period, "[M]","/")
{txt}
{com}.                         gen month = monthly(Month, "YM")
{txt}
{com}.                         format month %tm
{txt}
{com}.                         replace month = . if regexm(Month, "[Q]")
{txt}(67,354 real changes made, 67,354 to missing)

{com}.                         drop if month == .
{txt}(67,354 observations deleted)

{com}.                         drop Month
{txt}
{com}.                         * duplicate for products
.                         expand 5, gen(dup)
{txt}(809,200 observations created)

{com}.                         drop dup 
{txt}
{com}.                         sort partner month 
{txt}
{com}.                         quietly by partner month : gen product = cond(_N==1,0,_n)
{txt}
{com}.                         * match country names
.                                 replace partner = "Afghanistan" if partner == "Afghanistan, Islamic Republic of"
{txt}(4,250 real changes made)

{com}.                                 replace partner = "Armenia" if partner == "Armenia, Republic of"
{txt}(4,250 real changes made)

{com}.                                 replace partner = "Azerbaijan" if partner == "Azerbaijan, Republic of"
{txt}(4,250 real changes made)

{com}.                                 replace partner = "Bahamas" if partner == "Bahamas, The"
{txt}(4,250 real changes made)

{com}.                                 replace partner = "Bahrain" if partner == "Bahrain, Kingdom of"
{txt}(4,250 real changes made)

{com}.                                 replace partner = "Bolivia (Plurinational State of)" if partner == "Bolivia"
{txt}(4,250 real changes made)

{com}.                                 replace partner = "Bonaire" if partner == "Bonaire, Sint Eustatius and Saba"
{txt}(4,250 real changes made)

{com}.                                 replace partner = "Bosnia Herzegovina" if partner == "Bosnia and Herzegovina"
{txt}(4,250 real changes made)

{com}.                                 replace partner = "Cayman Isds" if partner == "Cayman Islands"
{txt}(4,250 real changes made)

{com}.                                 replace partner = "Central African Rep." if partner == "Central African Republic"
{txt}(4,250 real changes made)

{com}.                                 replace partner = "China, Hong Kong SAR" if partner == "China, P.R.: Hong Kong"
{txt}(4,250 real changes made)

{com}.                                 replace partner = "China, Macao SAR" if partner == "China, P.R.: Macao"
{txt}(4,250 real changes made)

{com}.                                 replace partner = "China" if partner == "China, P.R.: Mainland"
{txt}(4,250 real changes made)

{com}.                                 replace partner = "Dem. Rep. of the Congo" if partner == "Congo, Democratic Republic of"
{txt}(4,250 real changes made)

{com}.                                 replace partner = "Congo" if partner == "Congo, Republic of"
{txt}(4,250 real changes made)

{com}.                                 replace partner = "Cook Isds" if partner == "Cook Islands"
{txt}(4,250 real changes made)

{com}.                                 replace partner = "C̫te d'Ivoire" if partner == "Cote d'Ivoire"
{txt}(4,250 real changes made)

{com}.                                 replace partner = "Cura̤ao" if partner == "Curacao"
{txt}(4,250 real changes made)

{com}.                                 replace partner = "Czechia" if partner == "Czech Republic"
{txt}(4,250 real changes made)

{com}.                                 replace partner = "Dominican Rep." if partner == "Dominican Republic"
{txt}(4,250 real changes made)

{com}.                                 replace partner = "Eswatini" if partner == "Eswatini, Kingdom of"
{txt}(4,250 real changes made)

{com}.                                 replace partner = "Faeroe Isds" if partner == "Faroe Islands"
{txt}(4,250 real changes made)

{com}.                                 replace partner = "French Polynesia" if partner == "French Territories: French Polynesia"
{txt}(4,250 real changes made)

{com}.                                 replace partner = "Gambia" if partner == "Gambia, The"
{txt}(4,250 real changes made)

{com}.                                 replace partner = "New Caledonia" if partner == "French Territories: New Caledonia"
{txt}(4,250 real changes made)

{com}.                                 replace partner = "Iran" if partner == "Iran, Islamic Republic of"
{txt}(4,250 real changes made)

{com}.                                 replace partner = "Dem. People's Rep. of Korea" if partner == "Korea, Democratic People's Rep. of"
{txt}(4,250 real changes made)

{com}.                                 replace partner = "Rep. of Korea" if partner == "Korea, Republic of"
{txt}(4,250 real changes made)

{com}.                                 replace partner = "Kyrgyzstan" if partner == "Kyrgyz Republic"
{txt}(4,250 real changes made)

{com}.                                 replace partner = "Lao People's Dem. Rep." if partner == "Lao People's Democratic Republic"
{txt}(4,250 real changes made)

{com}.                                 replace partner = "Marshall Isds" if partner == "Marshall Islands, Republic of"
{txt}(4,250 real changes made)

{com}.                                 replace partner = "Rep. of Moldova" if partner == "Moldova"
{txt}(4,250 real changes made)

{com}.                                 replace partner = "Neth. Antilles" if partner == "Netherlands Antilles"
{txt}(4,250 real changes made)

{com}.                                 replace partner = "Norfolk Isds" if partner == "Norfolk Island"
{txt}(4,250 real changes made)

{com}.                                 replace partner = "North Macedonia" if partner == "North Macedonia, Republic of"
{txt}(4,250 real changes made)

{com}.                                 replace partner = "N. Mariana Isds" if partner == "Northern Mariana Isl"
{txt}(4,250 real changes made)

{com}.                                 replace partner = "FS Micronesia" if partner == "Micronesia, Federated States of"
{txt}(4,250 real changes made)

{com}.                                 replace partner = "Serbia" if partner == "Serbia, Republic of"
{txt}(4,250 real changes made)

{com}.                                 replace partner = "Saint Maarten" if partner == "Sint Maarten"
{txt}(4,250 real changes made)

{com}.                                 replace partner = "Slovakia" if partner == "Slovak Republic"
{txt}(4,250 real changes made)

{com}.                                 replace partner = "Solomon Isds" if partner == "Solomon Islands"
{txt}(4,250 real changes made)

{com}.                                 replace partner = "Saint Kitts and Nevis" if partner == "St. Kitts and Nevis"
{txt}(4,250 real changes made)

{com}.                                 replace partner = "Saint Lucia" if partner == "St. Lucia"
{txt}(4,250 real changes made)

{com}.                                 replace partner = "Saint Vincent and the Grenadines" if partner == "St. Vincent and the Grenadines"
{txt}(4,250 real changes made)

{com}.                                 replace partner = "Syria" if partner == "Syrian Arab Republic"
{txt}(4,250 real changes made)

{com}.                                 replace partner = "Timor-Leste" if partner == "Timor-Leste, Dem. Rep. of"
{txt}(4,250 real changes made)

{com}.                                 replace partner = "Tokelau" if partner == "Tokelau Islands"
{txt}(4,250 real changes made)

{com}.                                 replace partner = "Turks and Caicos Isds" if partner == "Turks and Caicos Islands"
{txt}(4,250 real changes made)

{com}.                                 replace partner = "USA" if partner == "United States"
{txt}(4,250 real changes made)

{com}.                                 replace partner = "United Rep. of Tanzania" if partner == "Tanzania"
{txt}(4,250 real changes made)

{com}.                                 replace partner = regexs(0) if regexm(partner, "(Venezuela)") 
{txt}(4,250 real changes made)

{com}.                                 replace partner = "Viet Nam" if partner == "Vietnam"
{txt}(4,250 real changes made)

{com}.                                 replace partner = "Br. Virgin Isds" if partner == "Virgin Islands, British"
{txt}(4,250 real changes made)

{com}.                                 replace partner = "Wallis and Futuna Isds" if partner == "Wallis and Futuna"
{txt}(4,250 real changes made)

{com}.                                 replace partner = "State of Palestine" if partner == "West Bank and Gaza"
{txt}(4,250 real changes made)

{com}.                                 replace partner = "Yemen" if partner == "Yemen, Republic of"
{txt}(4,250 real changes made)

{com}.                         cd "`pdir'/data_derived/merge"
{res}/Users/macbookair/Desktop/OCP_NEER/data_derived/merge
{txt}
{com}.                         merge m:1 partner using iso, gen(_merge_iso)                    
{res}{txt}{p 0 7 2}
(note: variable
partner was 
str36, now str38 to accommodate using data's values)
{p_end}

{col 5}Result{col 38}# of obs.
{col 5}{hline 41}
{col 5}not matched{col 30}{res}          80,761
{txt}{col 9}from master{col 30}{res}          80,750{txt}  (_merge_iso==1)
{col 9}from using{col 30}{res}              11{txt}  (_merge_iso==2)

{col 5}matched{col 30}{res}         930,750{txt}  (_merge_iso==3)
{col 5}{hline 41}

{com}.                         keep if _merge_iso == 3
{txt}(80,761 observations deleted)

{com}.                         drop _merge_iso
{txt}
{com}.                         cd "`pdir'/data_derived/deflators"
{res}/Users/macbookair/Desktop/OCP_NEER/data_derived/deflators
{txt}
{com}.                         * Replicate values for computation 
.                         * generate cpi as an index based 100 
.                         drop if cpi == .
{txt}(687,510 observations deleted)

{com}.                         /*replace cpi = 0.00001 if cpi == 0
>                         sort partner month product 
>                         bysort partner : gen base = cpi if _n==1
>                         levelsof partner, local(P)
>                         foreach p of local P {c -(}
>                         levelsof base if partner == "`p'" , local(F)
>                         foreach f of local F {c -(}
>                         replace base = `f' if base == . & partner == "`p'"
>                         {c )-}
>                         {c )-}
>                         replace cpi = (cpi/base)*100
>                         drop base
>                         */
.                         * Standardization of the serie 
.                         egen mean = mean(cpi)
{txt}
{com}.                         egen max = max(cpi)
{txt}
{com}.                         egen min = min(cpi)
{txt}
{com}.                         egen std = sd(cpi)
{txt}
{com}.                         gen cpi_sd = (cpi - min)/(max - min)
{txt}
{com}.                         * Generation of Moroccan cpi nominator 
.                         gen cpi_mar = cpi_sd if partner == "Morocco"
{txt}(242,510 missing values generated)

{com}.                         bysort month (cpi_mar) : replace cpi_mar = cpi_mar[_n-1] if missing(cpi_mar)    
{txt}(117595 real changes made)

{com}.                         drop if cpi_mar == .
{txt}(124,915 observations deleted)

{com}.                         keep partner month cpi product cpi_mar cpi_sd
{txt}
{com}.                         gen deflator = cpi_mar/cpi_sd
{txt}
{com}.                         
.                         cd "`pdir'/data_derived/deflators"
{res}/Users/macbookair/Desktop/OCP_NEER/data_derived/deflators
{txt}
{com}.                         save cpi_month, replace         
{txt}file cpi_month.dta saved

{com}.                         project, creates("cpi_month.dta")
{txt}project master > do-file creates: {res}"data_derived/deflators/cpi_month.dta" filesig(834356623:7815866){txt}

{com}.                         
.                 /* ULCM dollar annual
>                         cd "`pdir'/data_raw/deflators"
>                         import delimited using "ulc_dollar.csv",  clear 
>                         rename ïref_arealabel partner
>                         rename time period 
>                         rename obs_value ulc
>                         keep partner period ulc
>                         save ulcm, replace      
>         * ULCT
>         
> 
>         * PPI
>         
>         
>         * EPI
>         

{txt}end of do-file
      name:  {res}plog_85
       {txt}log:  {res}/Users/macbookair/Desktop/OCP_NEER/Codes/deflators.smcl
  {txt}log type:  {res}smcl
 {txt}closed on:  {res} 9 Dec 2020, 09:43:10
{txt}{.-}
{smcl}
{txt}{sf}{ul off}